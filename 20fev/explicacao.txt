ExplicaÃ§Ã£o:
A classe Contador tem um mÃ©todo incrementar(), que Ã© synchronized, garantindo que apenas uma thread possa acessÃ¡-lo por vez.
O mÃ©todo getValor() tambÃ©m Ã© synchronized para evitar leituras inconsistentes.
Criamos duas threads que chamam incrementar() em um loop.
O uso de Thread.sleep(100) simula um pequeno delay para tornar a concorrÃªncia mais visÃ­vel.
join() garante que o programa principal espere ambas as threads terminarem antes de imprimir o valor final.
Isso cobre a ideia de proteger a regiÃ£o crÃ­tica de uma variÃ¡vel normal com synchronized, sem precisar lidar diretamente com variÃ¡veis condicionais. Se precisar de alguma adaptaÃ§Ã£o, me avisa! ğŸš€